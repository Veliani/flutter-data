workflows:
  flutter-apk-from-zip:
    name: Flutter APK from ZIP
    max_build_duration: 60
    environment:
      flutter: stable
      java: 17
      vars:
        ZIP_NAME: app.zip
        FLUTTER_VERSION: "3.24.0"
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - ~/.gradle/caches
        - ~/.gradle/wrapper
    scripts:
      - name: Ensure Flutter version
        script: |
          flutter --version

      - name: Find & unzip project ZIP
        script: |
          set -e
          cd "$CM_BUILD_DIR"
          if [ -f "$ZIP_NAME" ]; then
            ZIP="$ZIP_NAME"
          else
            ZIP=$(ls -1 *.zip | head -n 1 || true)
          fi
          if [ -z "$ZIP" ]; then
            echo "No ZIP found in repo root. Upload $ZIP_NAME." >&2
            exit 1
          fi
          unzip -q "$ZIP" -d extracted

          if [ -f "extracted/pubspec.yaml" ]; then
            PUBROOT="extracted"
          else
            found=$(find extracted -maxdepth 3 -name pubspec.yaml | head -n 1 || true)
            if [ -z "$found" ]; then
              echo "pubspec.yaml not found inside zip." >&2
              exit 1
            fi
            PUBROOT="$(dirname "$found")"
          fi
          echo "PUBROOT=$PUBROOT" >> $CM_ENV

      - name: Auto-create Android platform if missing
        script: |
          set -e
          cd "$PUBROOT"
          if [ ! -f android/build.gradle ]; then
            flutter create .
          fi

      - name: Patch Kotlin/Gradle for Flutter 3.24.x
        script: |
          set -e
          cd "$PUBROOT"
          if [ -f android/build.gradle ]; then
            if grep -q 'ext.kotlin_version' android/build.gradle; then
              sed -i.bak 's/ext.kotlin_version *= *".*"/ext.kotlin_version = "1.9.24"/' android/build.gradle || true
            fi
            if grep -q 'com.android.tools.build:gradle' android/build.gradle; then
              sed -i.bak 's/com\.android\.tools\.build:gradle:[^"]*/com.android.tools.build:gradle:8.5.2/' android/build.gradle || true
            fi
          fi
          mkdir -p android/gradle/wrapper
          {
            echo "distributionBase=GRADLE_USER_HOME"
            echo "distributionPath=wrapper/dists"
            echo "zipStoreBase=GRADLE_USER_HOME"
            echo "zipStorePath=wrapper/dists"
            echo "distributionUrl=https://services.gradle.org/distributions/gradle-8.5-bin.zip"
          } > android/gradle/wrapper/gradle-wrapper.properties
          touch android/gradle.properties
          if ! grep -q 'org.gradle.jvmargs' android/gradle.properties; then
            echo 'org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8' >> android/gradle.properties
          fi

      - name: Flutter pub get
        script: |
          cd "$PUBROOT"
          flutter pub get

      - name: Build APK (release)
        script: |
          set -e
          cd "$PUBROOT"
          flutter build apk --release
          cp build/app/outputs/flutter-apk/app-release.apk "$CM_BUILD_DIR/app-release.apk"

    artifacts:
      - "$CM_BUILD_DIR/app-release.apk"
